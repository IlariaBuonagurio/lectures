
=== TOOLS FOR MASSIVE DATA ANALYTICS ===
http://bit.ly/cineca_course_instructions

--- ✄ -----------------------
# SLIDES

MRJOB:
  https://github.com/Yelp/mrjob/issues/1142
☐ Do jobs
    https://raw.githubusercontent.com/cineca-scai/course-exercises/master/ngs/mrjob/runner.py
    https://github.com/cineca-scai/course-exercises/blob/master/ngs/mrjob/job.py#L30
☐ mrjob runners
http://mrjob.readthedocs.org/en/latest/guides/runners.html
☐ Note: hadoop
  ☐ not remote (but you may use EMR on Amazon)
☐ how to run directly with HDFS (avoiding mrjob to copy)
☐ NGS

DOCKER:
 ☐ Securing the notebook via docker compose
   ☐ (environment PASSWORD) @tip

FINAL STEPS:
☐ @HELP
like http://nbviewer.ipython.org/github/cineca-scai/lectures/blob/milano/pydata/install/help.ipynb
☐ How to get ready for the other docker setup
☐ Docker schema for the two situations
☐ Clean presentations
  ☐ rerun kernels
  ☐ change to None slides
☐ Exercises solutions!!

--- ✄ -----------------------
FOR THE FUTURE
 ☐ Should we also split namenode and datanode?
   ☐ no secondary
   ☐ 2 datanode (with scale?)
☐ Give chance to transform GIT into Interactive
http://mybinder.org/

--- ✄ -----------------------
# COMPLETED

 ✔ Docker compose @done (15-09-30 12:54)
   ✔ add hadoop link @done (15-09-30 12:54)
 ✔ TEST HDFS @done (15-10-05 09:09) http://www.mccarroll.net/blog/pyspark/
Note to my self:
  mrjob hadoop runners https://pythonhosted.org/mrjob/runners-hadoop.html
  is not intended to work on a remote hadoop cluster, as hadoop does not work like that
  it seems that EMR use some @boto to make the magic
  https://groups.google.com/forum/#!topic/mrjob/qJMRtoqv51o
testing:
 ✔ export HADOOP_HOME=$HADOOP_PREFIX @done (15-10-05 12:58)
 ✔ /etc/bootstraph.sh? @done (15-10-05 12:58)
 ✔ python automatic_script.py -r hadoop README.md @done (15-10-05 12:58)
   ✔ works @done (15-10-05 12:58)
 ✔ A second image with jupyter + hadoop... sigh @done (15-10-05 15:58)
 ✔ move spark.yml into massive.yml @done (15-10-05 16:01)
 ✔ create mrjob dir and spark dir for notebooks @done (15-10-05 16:06)
 ✔ Code tests @done (15-10-01 23:18)
   ✔ HDFS @done (15-10-01 23:18)
 ✔ Docker images @done (15-10-01 23:18)
   ✘ test dataconda 3.5/3.4 + bokeh @cancelled (15-09-16 10:33)
   ✔ install jinja2 and plumbum + mrjob @done (15-10-01 23:18)
 ✔ create script for linux machines @done (15-10-06 10:50)
   ✔ test it @done (15-10-06 10:51)
   ✔ send @done (15-10-06 10:51)
 ✔ Audience download @done (15-10-08 15:46)
 ✔ Work the code @done (15-10-08 15:46)
   ✔ import mylibs from irodsgraph: @done (15-10-09 15:14)
     ✔ svn command on top of the head @done (15-10-09 15:14)
     ✔ put them all (mylibs) into /root/.ipython ! (it works) @done (15-10-09 14:36)
   ✔ mrjob bug hadoop.py @done (15-10-09 14:36)
     https://github.com/Yelp/mrjob/issues/1142
     ✘ fork the project to have a temporary solution? @cancelled (15-10-09 14:36)
 ✔ ipython exts @done (15-10-09 14:39)
   ✔ version information @done (15-09-16 12:47)
   ✔ list @done (15-10-09 14:39)
     https://github.com/ipython/ipython/wiki/Extensions-Index
   ✘ rmagic @cancelled (15-10-09 14:37)
     http://rpy.sourceforge.net/rpy2/doc-2.4/html/interactive.html#module-rpy2.ipython.rmagic
ORI - Workshop tools for massive data analysis:

 ✔ Docker compose notebook + Hadoop @done (15-10-09 14:33)
 ✔ Docker lightweight virtualization @done (15-10-09 14:33)
 ✔ Write code for both py3 and py2 @done (15-10-10 13:30)
 ✔ List differences and solutions @done (15-10-10 16:11)
   ✔ Armin and projects and compat @done (15-10-10 16:11)
 ✔ Ask python if you don't know @done (15-10-10 14:57)
   ✔ Howdoi example with py3 dictionaries loop @done (15-10-10 14:57)
 ✔ Py2 image + mrjob + howdoi @done (15-10-09 14:35)

Introduction:

 ✔ We do notebook: write live code in this slides @done (15-10-10 16:36)
 ✔ What is Python + advantages @done (15-10-10 16:36)
 ✔ Python interpreter + shell example @done (15-10-10 16:36)
 ✔ Python 2 or Python 3 @done (15-10-10 16:36)
   ✔ let's switch to python 3! @done (15-10-10 16:36)
   ✔ ...but write code for 2 * 3 = six @done (15-10-10 16:36)
   ✔ from __future__ import braces @done (15-10-10 16:36)
 ✔ modules and packaging @done (15-10-10 16:40)
   ✔ howdoi @done (15-10-10 16:40)
 ✔ Ipython shell @done (15-10-10 16:40)
   ✔ colors, output, history, bash commands @done (15-10-10 18:28)
 ✔ Notebook and jupyter project @done (15-10-10 18:28)
 ✔ Use like an editor: use keys @done (15-10-10 18:28)
 ✔ Python introspection: everything is an object @done (15-10-10 18:32)
   ✔ exercise:  create a function that generates a random string of random size @done (15-10-10 18:32)
 ✘ Markdown and reference @cancelled (15-10-10 18:32)


Magic and extensions:
 ✔ Ipython magic @done (15-10-11 12:46)
   ✔ exercise: write a bash file and execute it from within the ipython kernel @done (15-10-11 12:58)
 ✔ %magic is for line @done (15-10-11 13:03)
   ✔ %%magic is for cell @done (15-10-11 13:03)
 ✔ Make the magic: Write extension @done (15-10-11 13:22)
   ✔ exercise, write line extension and test it via notebook @done (15-10-11 13:22)
 ✔ Slides and reveal @done (15-10-11 17:01)
   ✔ Markdown @done (15-10-11 17:01)
     ✔ little stylesheet @done (15-10-11 17:01)
     ✔ md2pdf @done (15-10-11 17:04)
     ✔ github markdown @done (15-10-11 17:04)
     ✔ documentation? @done (15-10-11 17:09)
   ✔ exercise, write a web page with notebooks: header, image, lorem and a piece of code @done (15-10-11 17:12)

HADOOP:
✔ Hadoop recap ? @done (15-10-12 07:35)
  ✘ not SPARK @cancelled (15-10-13 00:03)
✘ a different docker image @cancelled (15-10-13 00:03)
✔ ipyhost... convert name or add host? @done (15-10-12 22:25)
✔ new variables (hadoop jar and hadoop examples) inside the container? @done (15-10-12 23:24)
✔ Open port to check hadoop execution? @done (15-10-13 00:03)
 ✘ yarn logs -applicationId @cancelled (15-10-13 00:03)
